geom_boxplot() +
xlab("class") +
theme(legend.position="none")
# Using number of observation per group mpg %>%
mutate(class = fct_reorder(class, hwy, fun=length )) %>%
ggplot( aes(x=class, y=hwy, fill=class)) +
geom_boxplot() +
xlab("class") +
theme(legend.position="none")
library(xml2)  #加载包
library(rvest)  #加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding="utf-8") #读取数据，规定编码
position<-web %>% html_nodes("div.event_box div p") %>% html_text()
print(point)
library(xml2)#加载包
install.packages('xml2')
install.packages("xml2")
install.packages("rvest")
library(xml2)  #加载包
library(rvest)  #加载包
url<-'http://www.gov.cn/zhaunti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding="utf-8") #读取数据，规定编码
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding="utf-8") #读取数据，规定编码
position<-web %>% html_nodes("div.event_box div p") %>% html_text()
library(xml2)  #加载包
library(rvest)  #加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding="utf-8") #读取数据，规定编码
position<-web %>% html_nodes("div.event_box div p") %>% html_text()
print(point)
install.packages("xml2")
install.packages("xml2")
install.packages("rvest")
install.packages("rvest")
library(xml2)  #加载包
library(rvest)  #加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding="utf-8") #读取数据，规定编码
position<-web %>% html_nodes("div.event_box div p") %>% html_text()
library(jiebaRD)  #加载包
install.packages("jieba")
install.packages("jiebaRD")
library(jiebaRD)  #加载包
library(jiebaR) #加载包
install.packages('jiebaR')
library(jiebaR) #加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(position,engine_s)#分词
f<-freq(seg) #统计词频
f<-f[order(f[2],decreasing=TRUE),] #根据词频降序排列
install.packages('yaml')
install.packages("yaml")
install.packages("yaml")
install.packages('yam1')
install.packages('wordcloud2')
install.packages("wordcloud2")
library(yaml)# 加载包
library(wordcloud2)#加载包
f1<-f[1:100,]     #提取前100词
wordcloud2(f1, size = 0.8 ,shape='circle')    #形状设置为圆形
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
library(xml2)  #加载包
library(rvest)  #加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding="utf-8") #读取数据，规定编码
position<-web %>% html_nodes("div.event_box div p") %>% html_text()
library(jiebaRD)  #加载包
library(jiebaR) #加载包
engine_s<-worker(stop_word = "E:\\Source\\R\\firstScrapy\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(position,engine_s)#分词
f<-freq(seg) #统计词频
f<-f[order(f[2],decreasing=TRUE),] #根据词频降序排列
library(xml2)#加载包
library(rvest)#加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")#读取数据，规定编码
library(jiebaRD)#加载包
library(jiebaR)#加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(Position,engine_s)#分词
f<-freq(seg)#统计词频
f<-f[order(f[2],decreasing = TRUE),]#根据词频降序排列
print(f)
library(yaml)#加载包
library(wordcloud2)#加载包
f1<-f[1:100,]#提取前100词
wordcloud2(f1,size = 0.5,shape='star')#形状设置为星形
blogdown::serve_site()
blogdown::serve_site()
library(xml2)#加载包
library(rvest)#加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")#读取数据，规定编码
library(jiebaRD)#加载包
library(jiebaR)#加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(Position,engine_s)#分词
f<-freq(seg)#统计词频
f<-f[order(f[2],decreasing = TRUE),]#根据词频降序排列
library(yaml)#加载包
library(wordcloud2)#加载包
f1<-f[1:100,]#提取前100词
wordcloud2(f1,size = 0.5,shape='star')#形状设置为星形
library(png)
logo <- readPNG('C:/dingxiaoyu/star.png')
install.packages("png")
library(png)
logo <- readPNG('C:/dingxiaoyu/star.png')
logo <- readPNG('C:/dingxiaoyu/star.png')
library(png)
> logo <- readPNG('C:/dingxiaoyu/star.png')
library(png)
logo <- readPNG('C:/dingxiaoyu/star.png')
logo <- readPNG('C:\\dingxiaoyu\\star.png')
library(xml2)#加载包
library(rvest)#加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")#读取数据，规定编码
library(jiebaRD)#加载包
library(jiebaR)#加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(Position,engine_s)#分词
library(xml2)#加载包
library(rvest)#加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")#读取数据，规定编码
library(jiebaRD)#加载包
library(jiebaR)#加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(Position,engine_s)#分词
f<-freq(seg)#统计词频
f<-f[order(f[2],decreasing = TRUE),]#根据词频降序排列
library(yaml)#加载包
library(wordcloud2)#加载包
f1<-f[1:100,]#提取前100词
wordcloud2(f1,size = 0.5,shape='star')#形状设置为星形
blogdown::serve_site()
library(xml2)#加载包
library(rvest)#加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")#读取数据，规定编码
library(jiebaRD)#加载包
library(jiebaR)#加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(Position,engine_s)#分词
f<-freq(seg)#统计词频
f<-f[order(f[2],decreasing = TRUE),]#根据词频降序排列
library(yaml)#加载包
library(wordcloud2)#加载包
f1<-f[1:100,]#提取前100词
wordcloud2(f1,size = 0.5,shape='star')#形状设置为星形
library(xml2)#加载包
library(rvest)#加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")#读取数据，规定编码
library(jiebaRD)#加载包
library(jiebaR)#加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(Position,engine_s)#分词
library(xml2)#加载包
library(rvest)#加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")#读取数据，规定编码
library(jiebaRD)#加载包
library(jiebaR)#加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(Position,engine_s)#分词
library(xml2)
library(rvest)
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")
library(jiebaRD)
library(jiebaR)
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")
seg<-segment(Position,engine_s)
library(xml2)
library(rvest)
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding = "utf-8")
library(jiebaRD)
library(jiebaR)
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")
seg<-segment(Position,engine_s)
f<-freq(seg)
f<-f[order(f[2],decreasing = TRUE),]
library(yaml)
library(wordcloud2)
f1<-f[1:100,]
wordcloud2(f1,size = 0.5,shape='star')
# Using median
mpg %>%
mutate(class = fct_reorder(class, hwy, fun=median)) %>%
ggplot( aes(x=reorder(class, hwy), y=hwy, fill=class)) +
geom_boxplot() +
xlab("class") +
theme(legend.position="none")
install.packages('mpg')
# Using median
mpg %>%
mutate(class = fct_reorder(class, hwy, fun=median)) %>%
ggplot( aes(x=reorder(class, hwy), y=hwy, fill=class)) +
geom_boxplot() +
xlab("class") +
theme(legend.position="none")
# library & data
library(ggplot2)
data=data.frame(x=rnorm(100))
# Basic plot with title
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue Histogram") +
theme_minimal()
# title on several lines
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue \nHistogram") +
theme_minimal()
# Custom title appearance
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue Histogram") +
theme_minimal() +
theme(
plot.title=element_text(family='', face='bold', colour='purple', size=26)
)
# Adjust the position of title
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.8) +
ggtitle("With title on the right") +
theme_minimal() +
theme(
plot.title=element_text( hjust=1, vjust=0.5, face='bold')
)
# Custom a few word of the title only:
my_title <- expression(paste("A ", italic(bold("blue")), " histogram"))
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.8) +
ggtitle(my_title) +
theme_minimal()
# library & data
library(ggplot2)
data=data.frame(x=rnorm(100))
# Basic plot with title
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue Histogram") +
theme_minimal()
# title on several lines
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue \nHistogram") +
theme_minimal()
# Custom title appearance
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue Histogram") +
theme_minimal() +
theme(
plot.title=element_text(family='', face='bold', colour='purple', size=26)
)
# Adjust the position of title
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.8) +
ggtitle("With title on the right") +
theme_minimal() +
theme(
plot.title=element_text( hjust=1, vjust=0.5, face='bold')
)
# Custom a few word of the title only:
my_title <- expression(paste("A ", italic(bold("blue")), " histogram"))
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.8) +
ggtitle(my_title) +
theme_minimal()
blogdown::serve_site()
blogdown:::new_post_addin()
# library & data
library(ggplot2)
data=data.frame(x=rnorm(100))
# Basic plot with title
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue Histogram") +
theme_minimal()
# title on several lines
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue \nHistogram") +
theme_minimal()
# Custom title appearance
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.5) +
ggtitle("A blue Histogram") +
theme_minimal() +
theme(
plot.title=element_text(family='', face='bold', colour='purple', size=26)
)
# Adjust the position of title
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.8) +
ggtitle("With title on the right") +
theme_minimal() +
theme(
plot.title=element_text( hjust=1, vjust=0.5, face='bold')
)
# Custom a few word of the title only:
my_title <- expression(paste("A ", italic(bold("blue")), " histogram"))
ggplot( data=data, aes(x=x)) +
geom_histogram(fill="skyblue", alpha=0.8) +
ggtitle(my_title) +
theme_minimal()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
d <- ggplot(diamonds, aes(x, y)) + xlim(4, 10) + ylim(4, 10)
d + geom_bin2d()#> Warning: Removed 478 rows containing non-finite values (stat_bin2d).
# You can control the size of the bins by specifying the number of
# bins in each direction:
d + geom_bin2d(bins = 10)#> Warning: Removed 478 rows containing non-finite values (stat_bin2d).#> Warning: Removed 4 rows containing missing values (geom_tile).d + geom_bin2d(bins = 30)#> Warning: Removed 478 rows containing non-finite values (stat_bin2d).
# Or by specifying the width of the bins
d + geom_bin2d(binwidth = c(0.1, 0.1))#> Warning: Removed 478 rows containing non-finite values (stat_bin2d).
d <- ggplot(diamonds, aes(x, y)) + xlim(4, 10) + ylim(4, 10)
install.packages('ggplot')
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages('ggplot2')
d <- ggplot(diamonds, aes(x, y)) + xlim(4, 10) + ylim(4, 10)
install.packages("ggplot2")
install.packages("ggplot2")
# library
library(tidyverse)
# Hexbin available in the geojson format here: https://team.carto.com/u/andrew/tables/andrew.us_states_hexgrid/public/map. Download it and then:
library(geojsonio)
# library
library(tidyverse)
# Hexbin available in the geojson format here: https://team.carto.com/u/andrew/tables/andrew.us_states_hexgrid/public/map. Download it and then:
install.packages("geojsonio")
library(geojsonio)
spdf <- geojson_read("us_states_hexgrid.geojson.json",  what = "sp")
set.seed(345)
library(ggplot2)
library(RColorBrewer)
ngroup=30
names=paste("G_",seq(1,ngroup),sep="")
DAT=data.frame()
for(i in seq(1:30)){
data=data.frame( matrix(0, ngroup , 3))
data[,1]=i
data[,2]=sample(names, nrow(data))
data[,3]=prop.table(sample( c(rep(0,100),c(1:ngroup)) ,nrow(data)))
DAT=rbind(DAT,data)
}
colnames(DAT)=c("Year","Group","Value")
DAT=DAT[order( DAT$Year, DAT$Group) , ]
coul = brewer.pal(12, "Paired")
coul = colorRampPalette(coul)(ngroup)
coul=coul[sample(c(1:length(coul)) , size=length(coul) ) ]
ggplot(DAT, aes(x=Year, y=Value, fill=Group )) +
geom_area(alpha=1 , color=element_blank() )+
theme_bw() +
#scale_fill_brewer(colour="red", breaks=rev(levels(DAT$Group)))+
scale_fill_manual(values = coul)+
theme(line = element_blank(),
text = element_blank(),
line = element_blank(),
title = element_blank(),
legend.position="none",
panel.border = element_blank(),
panel.background = element_blank())
# ggplot2 library
library(ggplot2)
# DATA
set.seed(345)
Sector <- rep(c("S01","S02","S03","S04","S05","S06","S07"),times=7)
Year <- as.numeric(rep(c("1950","1960","1970","1980","1990","2000","2010"),each=7))
Value <- runif(49, 10, 100)
data <- data.frame(Sector,Year,Value)
blogdown:::new_post_addin()
install.packages("shiny")
# ggplot2 library
library(ggplot2)
# DATA
set.seed(345)
Sector <- rep(c("S01","S02","S03","S04","S05","S06","S07"),times=7)
Year <- as.numeric(rep(c("1950","1960","1970","1980","1990","2000","2010"),each=7))
Value <- runif(49, 10, 100)
data <- data.frame(Sector,Year,Value)
install.packages("shiny")
# ggplot2 library
library(ggplot2)
# DATA
set.seed(345)
Sector <- rep(c("S01","S02","S03","S04","S05","S06","S07"),times=7)
Year <- as.numeric(rep(c("1950","1960","1970","1980","1990","2000","2010"),each=7))
Value <- runif(49, 10, 100)
data <- data.frame(Sector,Year,Value)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
# ggplot2 library
library(ggplot2)
# DATA
set.seed(345)
Sector <- rep(c("S01","S02","S03","S04","S05","S06","S07"),times=7)
Year <- as.numeric(rep(c("1950","1960","1970","1980","1990","2000","2010"),each=7))
Value <- runif(49, 10, 100)
data <- data.frame(Sector,Year,Value)
library(ggplot2)
set.seed(345)
Sector <- rep(c("S01","S02","S03","S04","S05","S06","S07"),times=7)
Year <- as.numeric(rep(c("1950","1960","1970","1980","1990","2000","2010"),each=7))
Value <- runif(49, 10, 100)
data <- data.frame(Sector,Year,Value)
set.seed(345)
Sector <- rep(c("S01","S02","S03","S04","S05","S06","S07"),times=7)
Year <- as.numeric(rep(c("1950","1960","1970","1980","1990","2000","2010"),each=7))
Value <- runif(49, 10, 100)
data <- data.frame(Sector,Year,Value)
# Data
library(ggplot2)
data=data.frame(cond = rep(c("condition_1", "condition_2"), each=10), my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16) )
library(ggplot2)
data=data.frame(cond = rep(c("condition_1", "condition_2"), each=10), my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16) )
# Basic scatter plot. Shape=1 is to have circles
ggplot(data, aes(x=my_x, y=my_y)) + geom_point(shape=1)
# Add a linear trend :
ggplot(data, aes(x=my_x, y=my_y)) +    geom_point(shape=1) +  geom_smooth(method=lm , color="red", se=FALSE)  # Add linear regression line
# Add a linear trend :
ggplot(data, aes(x=my_x, y=my_y)) +    geom_point(shape=1) +  geom_smooth(method=lm , color="red", se=TRUE)  # Add linear regression line
library(ggplot2)
> data=data.frame(cond = rep(c("condition_1", "condition_2"), each=10), my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16) )
# Data
library(ggplot2)
data=data.frame(cond = rep(c("condition_1", "condition_2"), each=10), my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16) )
# Basic scatter plot. Shape=1 is to have circles
ggplot(data, aes(x=my_x, y=my_y)) + geom_point(shape=1)
# Add a linear trend :
ggplot(data, aes(x=my_x, y=my_y)) +    geom_point(shape=1) +  geom_smooth(method=lm , color="red", se=FALSE)  # Add linear regression line
# Add a linear trend :
ggplot(data, aes(x=my_x, y=my_y)) +    geom_point(shape=1) +  geom_smooth(method=lm , color="red", se=TRUE)  # Add linear regression line
# Data
library(ggplot2)
data=data.frame(cond = rep(c("condition_1", "condition_2"), each=10), my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16) )
# Basic scatter plot. Shape=1 is to have circles
ggplot(data, aes(x=my_x, y=my_y)) + geom_point(shape=1)
# Add a linear trend :
ggplot(data, aes(x=my_x, y=my_y)) +    geom_point(shape=1) +  geom_smooth(method=lm , color="red", se=FALSE)  # Add linear regression line
# Add a linear trend :
ggplot(data, aes(x=my_x, y=my_y)) +    geom_point(shape=1) +  geom_smooth(method=lm , color="red", se=TRUE)  # Add linear regression line
blogdown::serve_site()
blogdown:::new_post_addin()
install.packages("xml2")
install.packages("rvest")
library(xml2)  #加载包
library(rvest)  #加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding="utf-8") #读取数据，规定编码
position<-web %>% html_nodes("div.event_box div p") %>% html_text()
install.packages("jiebaR")
install.packages("jiebaRD")
library(jiebaRD)  #加载包
library(jiebaR) #加载包
engine_s<-worker(stop_word = "E:\\Source\\R\\firstScrapy\\stopwords.txt")#初始化分词引擎并加载停用词。
install.packages("xml2")
install.packages("rvest")
library(xml2)  #加载包
library(rvest)  #加载包
url<-'http://www.gov.cn/zhuanti/2018lh/2018zfgzbg/zfgzbg.htm'
web<-read_html(url,encoding="utf-8") #读取数据，规定编码
position<-web %>% html_nodes("div.event_box div p") %>% html_text()
install.packages("jiebaR")
install.packages("jiebaRD")
library(jiebaRD)  #加载包
library(jiebaR) #加载包
engine_s<-worker(stop_word = "C:\\dingxiaoyu\\stopwords.txt")#初始化分词引擎并加载停用词。
seg<-segment(position,engine_s)#分词
install.packages("xml2")
install.packages("rvest")
install.packages("jiebaR")
f<-freq(seg) #统计词频
install.packages("jiebaRD")
f<-f[order(f[2],decreasing=TRUE),] #根据词频降序排列
install.packages("yam1")
install.packages("jiebaR")
install.packages("jiebaRD")
install.packages("wordcloud2")
install.packages("jiebaRD")
library(yaml)# 加载包
library(wordcloud2)#加载包
f1<-f[1:100,]     #提取前100词
wordcloud2(f1, size = 0.8 ,shape='circle')    #形状设置为圆形
blogdown::serve_site()
library("rvest")
library("xml2")          #加载用到的包
book <-data.frame()           #先建立一个空的数据框
for (i in 1:10){                  #写一个循环，批量爬取10个页面的数据
install.packages(xml2)
install.packages('xml2')
